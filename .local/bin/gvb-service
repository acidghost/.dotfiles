#!/usr/bin/env python3

from datetime import time, datetime, timedelta
from time import sleep
import os
import subprocess
import sys

TIME_FIRST = 15
TIME_SECOND = 10

TIMES = list(
    map(lambda tpl: time(*tpl),
        [(15, 17), (15, 32), (15, 47), (16, 2), (16, 17), (16, 33), (16, 48),
         (17, 3), (17, 18), (17, 33), (17, 48), (18, 3), (18, 18), (18, 33),
         (18, 48)]))


def notify(urg, t, in_t):
    p = subprocess.run([
        'dunstify', '-u', urg, '-a', 'GVB', '-A', 'stop,Stop service',
        f'There is a bus departing at {t} (in {in_t} minutes)'
    ],
                       capture_output=True,
                       text=True)
    return p.stdout.strip() == 'stop'


def main(pid_file):
    try:
        while True:
            now = datetime.now().replace(second=0, microsecond=0)
            now_min_first = (now + timedelta(seconds=TIME_FIRST * 60)).time()
            now_min_second = (now + timedelta(seconds=TIME_SECOND * 60)).time()

            departing = stopping = False
            for t in TIMES:
                stopping = False
                if t == now_min_first:
                    stopping = notify('critical', t, TIME_FIRST)
                    departing = True
                elif t == now_min_second:
                    stopping = notify('normal', t, TIME_SECOND)
                    departing = True

                if stopping:
                    break

            if stopping:
                break
            elif departing:
                os.system('kbd_alert')

            sleep(60)

    except KeyboardInterrupt:
        pass

    os.system('kbd_alert off')

    try:
        os.unlink(pid_file)
    except FileNotFoundError:
        pass


if __name__ == '__main__':
    main(sys.argv[1])
